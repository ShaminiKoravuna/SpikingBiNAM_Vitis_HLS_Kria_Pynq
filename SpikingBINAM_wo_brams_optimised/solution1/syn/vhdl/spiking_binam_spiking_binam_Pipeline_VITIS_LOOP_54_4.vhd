-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spiking_binam_spiking_binam_Pipeline_VITIS_LOOP_54_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_ZL14storage_matrix_7_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_15_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_23_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_31_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_39_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_47_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_55_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_63_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_71_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_79_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_87_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_95_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_103_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_111_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_119_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_127_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_135_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_143_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_151_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_159_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_167_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_175_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_183_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_191_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_199_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_207_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_215_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_223_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_231_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_239_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_247_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_255_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_6_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_14_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_22_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_30_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_38_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_46_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_54_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_62_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_70_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_78_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_86_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_94_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_102_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_110_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_118_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_126_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_134_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_142_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_150_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_158_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_166_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_174_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_182_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_190_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_198_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_206_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_214_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_222_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_230_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_238_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_246_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_254_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_5_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_13_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_21_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_29_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_37_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_45_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_53_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_61_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_69_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_77_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_85_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_93_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_101_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_109_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_117_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_125_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_133_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_141_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_149_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_157_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_165_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_173_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_181_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_189_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_197_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_205_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_213_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_221_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_229_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_237_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_245_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_253_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_4_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_12_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_20_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_28_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_36_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_44_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_52_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_60_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_68_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_76_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_84_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_92_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_100_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_108_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_116_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_124_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_132_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_140_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_148_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_156_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_164_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_172_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_180_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_188_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_196_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_204_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_212_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_220_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_228_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_236_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_244_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_252_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_3_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_11_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_19_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_27_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_35_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_43_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_51_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_59_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_67_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_75_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_83_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_91_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_99_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_107_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_115_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_123_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_131_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_139_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_147_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_155_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_163_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_171_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_179_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_187_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_195_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_203_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_211_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_219_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_227_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_235_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_243_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_251_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_2_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_10_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_18_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_26_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_34_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_42_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_50_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_58_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_66_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_74_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_82_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_90_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_98_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_106_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_114_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_122_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_130_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_138_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_146_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_154_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_162_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_170_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_178_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_186_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_194_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_202_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_210_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_218_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_226_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_234_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_242_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_250_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_1_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_9_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_17_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_25_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_33_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_41_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_49_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_57_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_65_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_73_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_81_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_89_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_97_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_105_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_113_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_121_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_129_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_137_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_145_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_153_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_161_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_169_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_177_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_185_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_193_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_201_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_209_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_217_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_225_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_233_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_241_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_249_load : IN STD_LOGIC_VECTOR (0 downto 0);
    v_V_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_7_ce0 : OUT STD_LOGIC;
    v_V_7_we0 : OUT STD_LOGIC;
    v_V_7_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    v_V_7_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_7_ce1 : OUT STD_LOGIC;
    v_V_7_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    v_V_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_6_ce0 : OUT STD_LOGIC;
    v_V_6_we0 : OUT STD_LOGIC;
    v_V_6_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    v_V_6_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_6_ce1 : OUT STD_LOGIC;
    v_V_6_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    v_V_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_5_ce0 : OUT STD_LOGIC;
    v_V_5_we0 : OUT STD_LOGIC;
    v_V_5_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    v_V_5_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_5_ce1 : OUT STD_LOGIC;
    v_V_5_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    v_V_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_4_ce0 : OUT STD_LOGIC;
    v_V_4_we0 : OUT STD_LOGIC;
    v_V_4_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    v_V_4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_4_ce1 : OUT STD_LOGIC;
    v_V_4_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    v_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_3_ce0 : OUT STD_LOGIC;
    v_V_3_we0 : OUT STD_LOGIC;
    v_V_3_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    v_V_3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_3_ce1 : OUT STD_LOGIC;
    v_V_3_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    v_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_2_ce0 : OUT STD_LOGIC;
    v_V_2_we0 : OUT STD_LOGIC;
    v_V_2_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    v_V_2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_2_ce1 : OUT STD_LOGIC;
    v_V_2_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    v_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_1_ce0 : OUT STD_LOGIC;
    v_V_1_we0 : OUT STD_LOGIC;
    v_V_1_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    v_V_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_1_ce1 : OUT STD_LOGIC;
    v_V_1_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    v_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_ce0 : OUT STD_LOGIC;
    v_V_we0 : OUT STD_LOGIC;
    v_V_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    v_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    v_V_ce1 : OUT STD_LOGIC;
    v_V_q1 : IN STD_LOGIC_VECTOR (6 downto 0);
    p_ZL14storage_matrix_0_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_8_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_16_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_24_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_32_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_40_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_48_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_56_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_64_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_72_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_80_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_88_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_96_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_104_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_112_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_120_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_128_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_136_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_144_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_152_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_160_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_168_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_176_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_184_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_192_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_200_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_208_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_216_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_224_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_232_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_240_load : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZL14storage_matrix_248_load : IN STD_LOGIC_VECTOR (0 downto 0);
    ref_timer_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ref_timer_V_ce0 : OUT STD_LOGIC;
    ref_timer_V_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
    ref_timer_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ref_timer_V_1_ce0 : OUT STD_LOGIC;
    ref_timer_V_1_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
    ref_timer_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ref_timer_V_2_ce0 : OUT STD_LOGIC;
    ref_timer_V_2_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
    ref_timer_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ref_timer_V_3_ce0 : OUT STD_LOGIC;
    ref_timer_V_3_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
    ref_timer_V_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ref_timer_V_4_ce0 : OUT STD_LOGIC;
    ref_timer_V_4_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
    ref_timer_V_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ref_timer_V_5_ce0 : OUT STD_LOGIC;
    ref_timer_V_5_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
    ref_timer_V_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ref_timer_V_6_ce0 : OUT STD_LOGIC;
    ref_timer_V_6_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
    ref_timer_V_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ref_timer_V_7_ce0 : OUT STD_LOGIC;
    ref_timer_V_7_q0 : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of spiking_binam_spiking_binam_Pipeline_VITIS_LOOP_54_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln54_fu_2364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln54_fu_2376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln54_reg_3072 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_2392_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_3084 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_3084_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_2462_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_3093 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_3093_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_2532_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_3102 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_3102_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_2602_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_3111 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_3111_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_2672_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_3120 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_3120_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_2742_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_3129 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_3129_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_2812_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_3138 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_3138_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_2882_p34 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_3147 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_3147_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_fu_2957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_3156 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_addr_reg_3160 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1019_1_fu_2963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_1_reg_3166 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_1_addr_reg_3170 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1019_2_fu_2969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_2_reg_3176 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_2_addr_reg_3180 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1019_3_fu_2975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_3_reg_3186 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_3_addr_reg_3190 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1019_4_fu_2981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_4_reg_3196 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_4_addr_reg_3200 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1019_5_fu_2987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_5_reg_3206 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_5_addr_reg_3210 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1019_6_fu_2993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_3216 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_6_addr_reg_3220 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1019_7_fu_2999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_7_reg_3226 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_7_addr_reg_3230 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal bank_fu_576 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln54_fu_2370_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_bank_1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln58_fu_2388_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component spiking_binam_mux_325_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (0 downto 0);
        din9 : IN STD_LOGIC_VECTOR (0 downto 0);
        din10 : IN STD_LOGIC_VECTOR (0 downto 0);
        din11 : IN STD_LOGIC_VECTOR (0 downto 0);
        din12 : IN STD_LOGIC_VECTOR (0 downto 0);
        din13 : IN STD_LOGIC_VECTOR (0 downto 0);
        din14 : IN STD_LOGIC_VECTOR (0 downto 0);
        din15 : IN STD_LOGIC_VECTOR (0 downto 0);
        din16 : IN STD_LOGIC_VECTOR (0 downto 0);
        din17 : IN STD_LOGIC_VECTOR (0 downto 0);
        din18 : IN STD_LOGIC_VECTOR (0 downto 0);
        din19 : IN STD_LOGIC_VECTOR (0 downto 0);
        din20 : IN STD_LOGIC_VECTOR (0 downto 0);
        din21 : IN STD_LOGIC_VECTOR (0 downto 0);
        din22 : IN STD_LOGIC_VECTOR (0 downto 0);
        din23 : IN STD_LOGIC_VECTOR (0 downto 0);
        din24 : IN STD_LOGIC_VECTOR (0 downto 0);
        din25 : IN STD_LOGIC_VECTOR (0 downto 0);
        din26 : IN STD_LOGIC_VECTOR (0 downto 0);
        din27 : IN STD_LOGIC_VECTOR (0 downto 0);
        din28 : IN STD_LOGIC_VECTOR (0 downto 0);
        din29 : IN STD_LOGIC_VECTOR (0 downto 0);
        din30 : IN STD_LOGIC_VECTOR (0 downto 0);
        din31 : IN STD_LOGIC_VECTOR (0 downto 0);
        din32 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component spiking_binam_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_325_1_1_1_U17 : component spiking_binam_mux_325_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 1,
        din18_WIDTH => 1,
        din19_WIDTH => 1,
        din20_WIDTH => 1,
        din21_WIDTH => 1,
        din22_WIDTH => 1,
        din23_WIDTH => 1,
        din24_WIDTH => 1,
        din25_WIDTH => 1,
        din26_WIDTH => 1,
        din27_WIDTH => 1,
        din28_WIDTH => 1,
        din29_WIDTH => 1,
        din30_WIDTH => 1,
        din31_WIDTH => 1,
        din32_WIDTH => 5,
        dout_WIDTH => 1)
    port map (
        din0 => p_ZL14storage_matrix_0_load,
        din1 => p_ZL14storage_matrix_8_load,
        din2 => p_ZL14storage_matrix_16_load,
        din3 => p_ZL14storage_matrix_24_load,
        din4 => p_ZL14storage_matrix_32_load,
        din5 => p_ZL14storage_matrix_40_load,
        din6 => p_ZL14storage_matrix_48_load,
        din7 => p_ZL14storage_matrix_56_load,
        din8 => p_ZL14storage_matrix_64_load,
        din9 => p_ZL14storage_matrix_72_load,
        din10 => p_ZL14storage_matrix_80_load,
        din11 => p_ZL14storage_matrix_88_load,
        din12 => p_ZL14storage_matrix_96_load,
        din13 => p_ZL14storage_matrix_104_load,
        din14 => p_ZL14storage_matrix_112_load,
        din15 => p_ZL14storage_matrix_120_load,
        din16 => p_ZL14storage_matrix_128_load,
        din17 => p_ZL14storage_matrix_136_load,
        din18 => p_ZL14storage_matrix_144_load,
        din19 => p_ZL14storage_matrix_152_load,
        din20 => p_ZL14storage_matrix_160_load,
        din21 => p_ZL14storage_matrix_168_load,
        din22 => p_ZL14storage_matrix_176_load,
        din23 => p_ZL14storage_matrix_184_load,
        din24 => p_ZL14storage_matrix_192_load,
        din25 => p_ZL14storage_matrix_200_load,
        din26 => p_ZL14storage_matrix_208_load,
        din27 => p_ZL14storage_matrix_216_load,
        din28 => p_ZL14storage_matrix_224_load,
        din29 => p_ZL14storage_matrix_232_load,
        din30 => p_ZL14storage_matrix_240_load,
        din31 => p_ZL14storage_matrix_248_load,
        din32 => trunc_ln58_fu_2388_p1,
        dout => tmp_fu_2392_p34);

    mux_325_1_1_1_U18 : component spiking_binam_mux_325_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 1,
        din18_WIDTH => 1,
        din19_WIDTH => 1,
        din20_WIDTH => 1,
        din21_WIDTH => 1,
        din22_WIDTH => 1,
        din23_WIDTH => 1,
        din24_WIDTH => 1,
        din25_WIDTH => 1,
        din26_WIDTH => 1,
        din27_WIDTH => 1,
        din28_WIDTH => 1,
        din29_WIDTH => 1,
        din30_WIDTH => 1,
        din31_WIDTH => 1,
        din32_WIDTH => 5,
        dout_WIDTH => 1)
    port map (
        din0 => p_ZL14storage_matrix_1_load,
        din1 => p_ZL14storage_matrix_9_load,
        din2 => p_ZL14storage_matrix_17_load,
        din3 => p_ZL14storage_matrix_25_load,
        din4 => p_ZL14storage_matrix_33_load,
        din5 => p_ZL14storage_matrix_41_load,
        din6 => p_ZL14storage_matrix_49_load,
        din7 => p_ZL14storage_matrix_57_load,
        din8 => p_ZL14storage_matrix_65_load,
        din9 => p_ZL14storage_matrix_73_load,
        din10 => p_ZL14storage_matrix_81_load,
        din11 => p_ZL14storage_matrix_89_load,
        din12 => p_ZL14storage_matrix_97_load,
        din13 => p_ZL14storage_matrix_105_load,
        din14 => p_ZL14storage_matrix_113_load,
        din15 => p_ZL14storage_matrix_121_load,
        din16 => p_ZL14storage_matrix_129_load,
        din17 => p_ZL14storage_matrix_137_load,
        din18 => p_ZL14storage_matrix_145_load,
        din19 => p_ZL14storage_matrix_153_load,
        din20 => p_ZL14storage_matrix_161_load,
        din21 => p_ZL14storage_matrix_169_load,
        din22 => p_ZL14storage_matrix_177_load,
        din23 => p_ZL14storage_matrix_185_load,
        din24 => p_ZL14storage_matrix_193_load,
        din25 => p_ZL14storage_matrix_201_load,
        din26 => p_ZL14storage_matrix_209_load,
        din27 => p_ZL14storage_matrix_217_load,
        din28 => p_ZL14storage_matrix_225_load,
        din29 => p_ZL14storage_matrix_233_load,
        din30 => p_ZL14storage_matrix_241_load,
        din31 => p_ZL14storage_matrix_249_load,
        din32 => trunc_ln58_fu_2388_p1,
        dout => tmp_1_fu_2462_p34);

    mux_325_1_1_1_U19 : component spiking_binam_mux_325_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 1,
        din18_WIDTH => 1,
        din19_WIDTH => 1,
        din20_WIDTH => 1,
        din21_WIDTH => 1,
        din22_WIDTH => 1,
        din23_WIDTH => 1,
        din24_WIDTH => 1,
        din25_WIDTH => 1,
        din26_WIDTH => 1,
        din27_WIDTH => 1,
        din28_WIDTH => 1,
        din29_WIDTH => 1,
        din30_WIDTH => 1,
        din31_WIDTH => 1,
        din32_WIDTH => 5,
        dout_WIDTH => 1)
    port map (
        din0 => p_ZL14storage_matrix_2_load,
        din1 => p_ZL14storage_matrix_10_load,
        din2 => p_ZL14storage_matrix_18_load,
        din3 => p_ZL14storage_matrix_26_load,
        din4 => p_ZL14storage_matrix_34_load,
        din5 => p_ZL14storage_matrix_42_load,
        din6 => p_ZL14storage_matrix_50_load,
        din7 => p_ZL14storage_matrix_58_load,
        din8 => p_ZL14storage_matrix_66_load,
        din9 => p_ZL14storage_matrix_74_load,
        din10 => p_ZL14storage_matrix_82_load,
        din11 => p_ZL14storage_matrix_90_load,
        din12 => p_ZL14storage_matrix_98_load,
        din13 => p_ZL14storage_matrix_106_load,
        din14 => p_ZL14storage_matrix_114_load,
        din15 => p_ZL14storage_matrix_122_load,
        din16 => p_ZL14storage_matrix_130_load,
        din17 => p_ZL14storage_matrix_138_load,
        din18 => p_ZL14storage_matrix_146_load,
        din19 => p_ZL14storage_matrix_154_load,
        din20 => p_ZL14storage_matrix_162_load,
        din21 => p_ZL14storage_matrix_170_load,
        din22 => p_ZL14storage_matrix_178_load,
        din23 => p_ZL14storage_matrix_186_load,
        din24 => p_ZL14storage_matrix_194_load,
        din25 => p_ZL14storage_matrix_202_load,
        din26 => p_ZL14storage_matrix_210_load,
        din27 => p_ZL14storage_matrix_218_load,
        din28 => p_ZL14storage_matrix_226_load,
        din29 => p_ZL14storage_matrix_234_load,
        din30 => p_ZL14storage_matrix_242_load,
        din31 => p_ZL14storage_matrix_250_load,
        din32 => trunc_ln58_fu_2388_p1,
        dout => tmp_3_fu_2532_p34);

    mux_325_1_1_1_U20 : component spiking_binam_mux_325_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 1,
        din18_WIDTH => 1,
        din19_WIDTH => 1,
        din20_WIDTH => 1,
        din21_WIDTH => 1,
        din22_WIDTH => 1,
        din23_WIDTH => 1,
        din24_WIDTH => 1,
        din25_WIDTH => 1,
        din26_WIDTH => 1,
        din27_WIDTH => 1,
        din28_WIDTH => 1,
        din29_WIDTH => 1,
        din30_WIDTH => 1,
        din31_WIDTH => 1,
        din32_WIDTH => 5,
        dout_WIDTH => 1)
    port map (
        din0 => p_ZL14storage_matrix_3_load,
        din1 => p_ZL14storage_matrix_11_load,
        din2 => p_ZL14storage_matrix_19_load,
        din3 => p_ZL14storage_matrix_27_load,
        din4 => p_ZL14storage_matrix_35_load,
        din5 => p_ZL14storage_matrix_43_load,
        din6 => p_ZL14storage_matrix_51_load,
        din7 => p_ZL14storage_matrix_59_load,
        din8 => p_ZL14storage_matrix_67_load,
        din9 => p_ZL14storage_matrix_75_load,
        din10 => p_ZL14storage_matrix_83_load,
        din11 => p_ZL14storage_matrix_91_load,
        din12 => p_ZL14storage_matrix_99_load,
        din13 => p_ZL14storage_matrix_107_load,
        din14 => p_ZL14storage_matrix_115_load,
        din15 => p_ZL14storage_matrix_123_load,
        din16 => p_ZL14storage_matrix_131_load,
        din17 => p_ZL14storage_matrix_139_load,
        din18 => p_ZL14storage_matrix_147_load,
        din19 => p_ZL14storage_matrix_155_load,
        din20 => p_ZL14storage_matrix_163_load,
        din21 => p_ZL14storage_matrix_171_load,
        din22 => p_ZL14storage_matrix_179_load,
        din23 => p_ZL14storage_matrix_187_load,
        din24 => p_ZL14storage_matrix_195_load,
        din25 => p_ZL14storage_matrix_203_load,
        din26 => p_ZL14storage_matrix_211_load,
        din27 => p_ZL14storage_matrix_219_load,
        din28 => p_ZL14storage_matrix_227_load,
        din29 => p_ZL14storage_matrix_235_load,
        din30 => p_ZL14storage_matrix_243_load,
        din31 => p_ZL14storage_matrix_251_load,
        din32 => trunc_ln58_fu_2388_p1,
        dout => tmp_4_fu_2602_p34);

    mux_325_1_1_1_U21 : component spiking_binam_mux_325_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 1,
        din18_WIDTH => 1,
        din19_WIDTH => 1,
        din20_WIDTH => 1,
        din21_WIDTH => 1,
        din22_WIDTH => 1,
        din23_WIDTH => 1,
        din24_WIDTH => 1,
        din25_WIDTH => 1,
        din26_WIDTH => 1,
        din27_WIDTH => 1,
        din28_WIDTH => 1,
        din29_WIDTH => 1,
        din30_WIDTH => 1,
        din31_WIDTH => 1,
        din32_WIDTH => 5,
        dout_WIDTH => 1)
    port map (
        din0 => p_ZL14storage_matrix_4_load,
        din1 => p_ZL14storage_matrix_12_load,
        din2 => p_ZL14storage_matrix_20_load,
        din3 => p_ZL14storage_matrix_28_load,
        din4 => p_ZL14storage_matrix_36_load,
        din5 => p_ZL14storage_matrix_44_load,
        din6 => p_ZL14storage_matrix_52_load,
        din7 => p_ZL14storage_matrix_60_load,
        din8 => p_ZL14storage_matrix_68_load,
        din9 => p_ZL14storage_matrix_76_load,
        din10 => p_ZL14storage_matrix_84_load,
        din11 => p_ZL14storage_matrix_92_load,
        din12 => p_ZL14storage_matrix_100_load,
        din13 => p_ZL14storage_matrix_108_load,
        din14 => p_ZL14storage_matrix_116_load,
        din15 => p_ZL14storage_matrix_124_load,
        din16 => p_ZL14storage_matrix_132_load,
        din17 => p_ZL14storage_matrix_140_load,
        din18 => p_ZL14storage_matrix_148_load,
        din19 => p_ZL14storage_matrix_156_load,
        din20 => p_ZL14storage_matrix_164_load,
        din21 => p_ZL14storage_matrix_172_load,
        din22 => p_ZL14storage_matrix_180_load,
        din23 => p_ZL14storage_matrix_188_load,
        din24 => p_ZL14storage_matrix_196_load,
        din25 => p_ZL14storage_matrix_204_load,
        din26 => p_ZL14storage_matrix_212_load,
        din27 => p_ZL14storage_matrix_220_load,
        din28 => p_ZL14storage_matrix_228_load,
        din29 => p_ZL14storage_matrix_236_load,
        din30 => p_ZL14storage_matrix_244_load,
        din31 => p_ZL14storage_matrix_252_load,
        din32 => trunc_ln58_fu_2388_p1,
        dout => tmp_5_fu_2672_p34);

    mux_325_1_1_1_U22 : component spiking_binam_mux_325_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 1,
        din18_WIDTH => 1,
        din19_WIDTH => 1,
        din20_WIDTH => 1,
        din21_WIDTH => 1,
        din22_WIDTH => 1,
        din23_WIDTH => 1,
        din24_WIDTH => 1,
        din25_WIDTH => 1,
        din26_WIDTH => 1,
        din27_WIDTH => 1,
        din28_WIDTH => 1,
        din29_WIDTH => 1,
        din30_WIDTH => 1,
        din31_WIDTH => 1,
        din32_WIDTH => 5,
        dout_WIDTH => 1)
    port map (
        din0 => p_ZL14storage_matrix_5_load,
        din1 => p_ZL14storage_matrix_13_load,
        din2 => p_ZL14storage_matrix_21_load,
        din3 => p_ZL14storage_matrix_29_load,
        din4 => p_ZL14storage_matrix_37_load,
        din5 => p_ZL14storage_matrix_45_load,
        din6 => p_ZL14storage_matrix_53_load,
        din7 => p_ZL14storage_matrix_61_load,
        din8 => p_ZL14storage_matrix_69_load,
        din9 => p_ZL14storage_matrix_77_load,
        din10 => p_ZL14storage_matrix_85_load,
        din11 => p_ZL14storage_matrix_93_load,
        din12 => p_ZL14storage_matrix_101_load,
        din13 => p_ZL14storage_matrix_109_load,
        din14 => p_ZL14storage_matrix_117_load,
        din15 => p_ZL14storage_matrix_125_load,
        din16 => p_ZL14storage_matrix_133_load,
        din17 => p_ZL14storage_matrix_141_load,
        din18 => p_ZL14storage_matrix_149_load,
        din19 => p_ZL14storage_matrix_157_load,
        din20 => p_ZL14storage_matrix_165_load,
        din21 => p_ZL14storage_matrix_173_load,
        din22 => p_ZL14storage_matrix_181_load,
        din23 => p_ZL14storage_matrix_189_load,
        din24 => p_ZL14storage_matrix_197_load,
        din25 => p_ZL14storage_matrix_205_load,
        din26 => p_ZL14storage_matrix_213_load,
        din27 => p_ZL14storage_matrix_221_load,
        din28 => p_ZL14storage_matrix_229_load,
        din29 => p_ZL14storage_matrix_237_load,
        din30 => p_ZL14storage_matrix_245_load,
        din31 => p_ZL14storage_matrix_253_load,
        din32 => trunc_ln58_fu_2388_p1,
        dout => tmp_7_fu_2742_p34);

    mux_325_1_1_1_U23 : component spiking_binam_mux_325_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 1,
        din18_WIDTH => 1,
        din19_WIDTH => 1,
        din20_WIDTH => 1,
        din21_WIDTH => 1,
        din22_WIDTH => 1,
        din23_WIDTH => 1,
        din24_WIDTH => 1,
        din25_WIDTH => 1,
        din26_WIDTH => 1,
        din27_WIDTH => 1,
        din28_WIDTH => 1,
        din29_WIDTH => 1,
        din30_WIDTH => 1,
        din31_WIDTH => 1,
        din32_WIDTH => 5,
        dout_WIDTH => 1)
    port map (
        din0 => p_ZL14storage_matrix_6_load,
        din1 => p_ZL14storage_matrix_14_load,
        din2 => p_ZL14storage_matrix_22_load,
        din3 => p_ZL14storage_matrix_30_load,
        din4 => p_ZL14storage_matrix_38_load,
        din5 => p_ZL14storage_matrix_46_load,
        din6 => p_ZL14storage_matrix_54_load,
        din7 => p_ZL14storage_matrix_62_load,
        din8 => p_ZL14storage_matrix_70_load,
        din9 => p_ZL14storage_matrix_78_load,
        din10 => p_ZL14storage_matrix_86_load,
        din11 => p_ZL14storage_matrix_94_load,
        din12 => p_ZL14storage_matrix_102_load,
        din13 => p_ZL14storage_matrix_110_load,
        din14 => p_ZL14storage_matrix_118_load,
        din15 => p_ZL14storage_matrix_126_load,
        din16 => p_ZL14storage_matrix_134_load,
        din17 => p_ZL14storage_matrix_142_load,
        din18 => p_ZL14storage_matrix_150_load,
        din19 => p_ZL14storage_matrix_158_load,
        din20 => p_ZL14storage_matrix_166_load,
        din21 => p_ZL14storage_matrix_174_load,
        din22 => p_ZL14storage_matrix_182_load,
        din23 => p_ZL14storage_matrix_190_load,
        din24 => p_ZL14storage_matrix_198_load,
        din25 => p_ZL14storage_matrix_206_load,
        din26 => p_ZL14storage_matrix_214_load,
        din27 => p_ZL14storage_matrix_222_load,
        din28 => p_ZL14storage_matrix_230_load,
        din29 => p_ZL14storage_matrix_238_load,
        din30 => p_ZL14storage_matrix_246_load,
        din31 => p_ZL14storage_matrix_254_load,
        din32 => trunc_ln58_fu_2388_p1,
        dout => tmp_8_fu_2812_p34);

    mux_325_1_1_1_U24 : component spiking_binam_mux_325_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 1,
        din18_WIDTH => 1,
        din19_WIDTH => 1,
        din20_WIDTH => 1,
        din21_WIDTH => 1,
        din22_WIDTH => 1,
        din23_WIDTH => 1,
        din24_WIDTH => 1,
        din25_WIDTH => 1,
        din26_WIDTH => 1,
        din27_WIDTH => 1,
        din28_WIDTH => 1,
        din29_WIDTH => 1,
        din30_WIDTH => 1,
        din31_WIDTH => 1,
        din32_WIDTH => 5,
        dout_WIDTH => 1)
    port map (
        din0 => p_ZL14storage_matrix_7_load,
        din1 => p_ZL14storage_matrix_15_load,
        din2 => p_ZL14storage_matrix_23_load,
        din3 => p_ZL14storage_matrix_31_load,
        din4 => p_ZL14storage_matrix_39_load,
        din5 => p_ZL14storage_matrix_47_load,
        din6 => p_ZL14storage_matrix_55_load,
        din7 => p_ZL14storage_matrix_63_load,
        din8 => p_ZL14storage_matrix_71_load,
        din9 => p_ZL14storage_matrix_79_load,
        din10 => p_ZL14storage_matrix_87_load,
        din11 => p_ZL14storage_matrix_95_load,
        din12 => p_ZL14storage_matrix_103_load,
        din13 => p_ZL14storage_matrix_111_load,
        din14 => p_ZL14storage_matrix_119_load,
        din15 => p_ZL14storage_matrix_127_load,
        din16 => p_ZL14storage_matrix_135_load,
        din17 => p_ZL14storage_matrix_143_load,
        din18 => p_ZL14storage_matrix_151_load,
        din19 => p_ZL14storage_matrix_159_load,
        din20 => p_ZL14storage_matrix_167_load,
        din21 => p_ZL14storage_matrix_175_load,
        din22 => p_ZL14storage_matrix_183_load,
        din23 => p_ZL14storage_matrix_191_load,
        din24 => p_ZL14storage_matrix_199_load,
        din25 => p_ZL14storage_matrix_207_load,
        din26 => p_ZL14storage_matrix_215_load,
        din27 => p_ZL14storage_matrix_223_load,
        din28 => p_ZL14storage_matrix_231_load,
        din29 => p_ZL14storage_matrix_239_load,
        din30 => p_ZL14storage_matrix_247_load,
        din31 => p_ZL14storage_matrix_255_load,
        din32 => trunc_ln58_fu_2388_p1,
        dout => tmp_9_fu_2882_p34);

    flow_control_loop_pipe_sequential_init_U : component spiking_binam_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    bank_fu_576_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln54_fu_2364_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    bank_fu_576 <= add_ln54_fu_2370_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    bank_fu_576 <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                tmp_1_reg_3093_pp0_iter1_reg <= tmp_1_reg_3093;
                tmp_3_reg_3102_pp0_iter1_reg <= tmp_3_reg_3102;
                tmp_4_reg_3111_pp0_iter1_reg <= tmp_4_reg_3111;
                tmp_5_reg_3120_pp0_iter1_reg <= tmp_5_reg_3120;
                tmp_7_reg_3129_pp0_iter1_reg <= tmp_7_reg_3129;
                tmp_8_reg_3138_pp0_iter1_reg <= tmp_8_reg_3138;
                tmp_9_reg_3147_pp0_iter1_reg <= tmp_9_reg_3147;
                tmp_reg_3084_pp0_iter1_reg <= tmp_reg_3084;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_reg_3093 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_1_reg_3166 <= icmp_ln1019_1_fu_2963_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_3102 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_2_reg_3176 <= icmp_ln1019_2_fu_2969_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_3111 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_3_reg_3186 <= icmp_ln1019_3_fu_2975_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_reg_3120 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_4_reg_3196 <= icmp_ln1019_4_fu_2981_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_reg_3129 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_5_reg_3206 <= icmp_ln1019_5_fu_2987_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_reg_3138 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_6_reg_3216 <= icmp_ln1019_6_fu_2993_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_3147 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_7_reg_3226 <= icmp_ln1019_7_fu_2999_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_3084 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_3156 <= icmp_ln1019_fu_2957_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln54_fu_2364_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1_reg_3093 <= tmp_1_fu_2462_p34;
                tmp_3_reg_3102 <= tmp_3_fu_2532_p34;
                tmp_4_reg_3111 <= tmp_4_fu_2602_p34;
                tmp_5_reg_3120 <= tmp_5_fu_2672_p34;
                tmp_7_reg_3129 <= tmp_7_fu_2742_p34;
                tmp_8_reg_3138 <= tmp_8_fu_2812_p34;
                tmp_9_reg_3147 <= tmp_9_fu_2882_p34;
                tmp_reg_3084 <= tmp_fu_2392_p34;
                    zext_ln54_reg_3072(5 downto 0) <= zext_ln54_fu_2376_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_1_fu_2963_p2 = ap_const_lv1_1) and (tmp_1_reg_3093 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                v_V_1_addr_reg_3170 <= zext_ln54_reg_3072(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_2_fu_2969_p2 = ap_const_lv1_1) and (tmp_3_reg_3102 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                v_V_2_addr_reg_3180 <= zext_ln54_reg_3072(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_3_fu_2975_p2 = ap_const_lv1_1) and (tmp_4_reg_3111 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                v_V_3_addr_reg_3190 <= zext_ln54_reg_3072(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_4_fu_2981_p2 = ap_const_lv1_1) and (tmp_5_reg_3120 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                v_V_4_addr_reg_3200 <= zext_ln54_reg_3072(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_5_fu_2987_p2 = ap_const_lv1_1) and (tmp_7_reg_3129 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                v_V_5_addr_reg_3210 <= zext_ln54_reg_3072(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_6_fu_2993_p2 = ap_const_lv1_1) and (tmp_8_reg_3138 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                v_V_6_addr_reg_3220 <= zext_ln54_reg_3072(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_7_fu_2999_p2 = ap_const_lv1_1) and (tmp_9_reg_3147 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                v_V_7_addr_reg_3230 <= zext_ln54_reg_3072(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_fu_2957_p2 = ap_const_lv1_1) and (tmp_reg_3084 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                v_V_addr_reg_3160 <= zext_ln54_reg_3072(5 - 1 downto 0);
            end if;
        end if;
    end process;
    zext_ln54_reg_3072(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln54_fu_2370_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_bank_1) + unsigned(ap_const_lv6_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln54_fu_2364_p2)
    begin
        if (((icmp_ln54_fu_2364_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_bank_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, bank_fu_576, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_bank_1 <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_bank_1 <= bank_fu_576;
        end if; 
    end process;

    icmp_ln1019_1_fu_2963_p2 <= "1" when (ref_timer_V_1_q0 = ap_const_lv3_0) else "0";
    icmp_ln1019_2_fu_2969_p2 <= "1" when (ref_timer_V_2_q0 = ap_const_lv3_0) else "0";
    icmp_ln1019_3_fu_2975_p2 <= "1" when (ref_timer_V_3_q0 = ap_const_lv3_0) else "0";
    icmp_ln1019_4_fu_2981_p2 <= "1" when (ref_timer_V_4_q0 = ap_const_lv3_0) else "0";
    icmp_ln1019_5_fu_2987_p2 <= "1" when (ref_timer_V_5_q0 = ap_const_lv3_0) else "0";
    icmp_ln1019_6_fu_2993_p2 <= "1" when (ref_timer_V_6_q0 = ap_const_lv3_0) else "0";
    icmp_ln1019_7_fu_2999_p2 <= "1" when (ref_timer_V_7_q0 = ap_const_lv3_0) else "0";
    icmp_ln1019_fu_2957_p2 <= "1" when (ref_timer_V_q0 = ap_const_lv3_0) else "0";
    icmp_ln54_fu_2364_p2 <= "1" when (ap_sig_allocacmp_bank_1 = ap_const_lv6_20) else "0";
    ref_timer_V_1_address0 <= zext_ln54_fu_2376_p1(5 - 1 downto 0);

    ref_timer_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ref_timer_V_1_ce0 <= ap_const_logic_1;
        else 
            ref_timer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ref_timer_V_2_address0 <= zext_ln54_fu_2376_p1(5 - 1 downto 0);

    ref_timer_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ref_timer_V_2_ce0 <= ap_const_logic_1;
        else 
            ref_timer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ref_timer_V_3_address0 <= zext_ln54_fu_2376_p1(5 - 1 downto 0);

    ref_timer_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ref_timer_V_3_ce0 <= ap_const_logic_1;
        else 
            ref_timer_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ref_timer_V_4_address0 <= zext_ln54_fu_2376_p1(5 - 1 downto 0);

    ref_timer_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ref_timer_V_4_ce0 <= ap_const_logic_1;
        else 
            ref_timer_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ref_timer_V_5_address0 <= zext_ln54_fu_2376_p1(5 - 1 downto 0);

    ref_timer_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ref_timer_V_5_ce0 <= ap_const_logic_1;
        else 
            ref_timer_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ref_timer_V_6_address0 <= zext_ln54_fu_2376_p1(5 - 1 downto 0);

    ref_timer_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ref_timer_V_6_ce0 <= ap_const_logic_1;
        else 
            ref_timer_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ref_timer_V_7_address0 <= zext_ln54_fu_2376_p1(5 - 1 downto 0);

    ref_timer_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ref_timer_V_7_ce0 <= ap_const_logic_1;
        else 
            ref_timer_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ref_timer_V_address0 <= zext_ln54_fu_2376_p1(5 - 1 downto 0);

    ref_timer_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ref_timer_V_ce0 <= ap_const_logic_1;
        else 
            ref_timer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln58_fu_2388_p1 <= ap_sig_allocacmp_bank_1(5 - 1 downto 0);
    v_V_1_address0 <= v_V_1_addr_reg_3170;
    v_V_1_address1 <= zext_ln54_reg_3072(5 - 1 downto 0);

    v_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_1_ce0 <= ap_const_logic_1;
        else 
            v_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_V_1_ce1 <= ap_const_logic_1;
        else 
            v_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_1_d0 <= std_logic_vector(unsigned(v_V_1_q1) + unsigned(ap_const_lv7_D));

    v_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_1_reg_3093_pp0_iter1_reg, icmp_ln1019_1_reg_3166)
    begin
        if (((icmp_ln1019_1_reg_3166 = ap_const_lv1_1) and (tmp_1_reg_3093_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_1_we0 <= ap_const_logic_1;
        else 
            v_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_2_address0 <= v_V_2_addr_reg_3180;
    v_V_2_address1 <= zext_ln54_reg_3072(5 - 1 downto 0);

    v_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_2_ce0 <= ap_const_logic_1;
        else 
            v_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_V_2_ce1 <= ap_const_logic_1;
        else 
            v_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_2_d0 <= std_logic_vector(unsigned(v_V_2_q1) + unsigned(ap_const_lv7_D));

    v_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_3_reg_3102_pp0_iter1_reg, icmp_ln1019_2_reg_3176)
    begin
        if (((icmp_ln1019_2_reg_3176 = ap_const_lv1_1) and (tmp_3_reg_3102_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_2_we0 <= ap_const_logic_1;
        else 
            v_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_3_address0 <= v_V_3_addr_reg_3190;
    v_V_3_address1 <= zext_ln54_reg_3072(5 - 1 downto 0);

    v_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_3_ce0 <= ap_const_logic_1;
        else 
            v_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_V_3_ce1 <= ap_const_logic_1;
        else 
            v_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_3_d0 <= std_logic_vector(unsigned(v_V_3_q1) + unsigned(ap_const_lv7_D));

    v_V_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_4_reg_3111_pp0_iter1_reg, icmp_ln1019_3_reg_3186)
    begin
        if (((icmp_ln1019_3_reg_3186 = ap_const_lv1_1) and (tmp_4_reg_3111_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_3_we0 <= ap_const_logic_1;
        else 
            v_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_4_address0 <= v_V_4_addr_reg_3200;
    v_V_4_address1 <= zext_ln54_reg_3072(5 - 1 downto 0);

    v_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_4_ce0 <= ap_const_logic_1;
        else 
            v_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_V_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_V_4_ce1 <= ap_const_logic_1;
        else 
            v_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_4_d0 <= std_logic_vector(unsigned(v_V_4_q1) + unsigned(ap_const_lv7_D));

    v_V_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_5_reg_3120_pp0_iter1_reg, icmp_ln1019_4_reg_3196)
    begin
        if (((icmp_ln1019_4_reg_3196 = ap_const_lv1_1) and (tmp_5_reg_3120_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_4_we0 <= ap_const_logic_1;
        else 
            v_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_5_address0 <= v_V_5_addr_reg_3210;
    v_V_5_address1 <= zext_ln54_reg_3072(5 - 1 downto 0);

    v_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_5_ce0 <= ap_const_logic_1;
        else 
            v_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_V_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_V_5_ce1 <= ap_const_logic_1;
        else 
            v_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_5_d0 <= std_logic_vector(unsigned(v_V_5_q1) + unsigned(ap_const_lv7_D));

    v_V_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_7_reg_3129_pp0_iter1_reg, icmp_ln1019_5_reg_3206)
    begin
        if (((icmp_ln1019_5_reg_3206 = ap_const_lv1_1) and (tmp_7_reg_3129_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_5_we0 <= ap_const_logic_1;
        else 
            v_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_6_address0 <= v_V_6_addr_reg_3220;
    v_V_6_address1 <= zext_ln54_reg_3072(5 - 1 downto 0);

    v_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_6_ce0 <= ap_const_logic_1;
        else 
            v_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_V_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_V_6_ce1 <= ap_const_logic_1;
        else 
            v_V_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_6_d0 <= std_logic_vector(unsigned(v_V_6_q1) + unsigned(ap_const_lv7_D));

    v_V_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_8_reg_3138_pp0_iter1_reg, icmp_ln1019_6_reg_3216)
    begin
        if (((icmp_ln1019_6_reg_3216 = ap_const_lv1_1) and (tmp_8_reg_3138_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_6_we0 <= ap_const_logic_1;
        else 
            v_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_7_address0 <= v_V_7_addr_reg_3230;
    v_V_7_address1 <= zext_ln54_reg_3072(5 - 1 downto 0);

    v_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_7_ce0 <= ap_const_logic_1;
        else 
            v_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_V_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_V_7_ce1 <= ap_const_logic_1;
        else 
            v_V_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_7_d0 <= std_logic_vector(unsigned(v_V_7_q1) + unsigned(ap_const_lv7_D));

    v_V_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_9_reg_3147_pp0_iter1_reg, icmp_ln1019_7_reg_3226)
    begin
        if (((icmp_ln1019_7_reg_3226 = ap_const_lv1_1) and (tmp_9_reg_3147_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_7_we0 <= ap_const_logic_1;
        else 
            v_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_address0 <= v_V_addr_reg_3160;
    v_V_address1 <= zext_ln54_reg_3072(5 - 1 downto 0);

    v_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_ce0 <= ap_const_logic_1;
        else 
            v_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v_V_ce1 <= ap_const_logic_1;
        else 
            v_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v_V_d0 <= std_logic_vector(unsigned(v_V_q1) + unsigned(ap_const_lv7_D));

    v_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_reg_3084_pp0_iter1_reg, icmp_ln1019_reg_3156)
    begin
        if (((icmp_ln1019_reg_3156 = ap_const_lv1_1) and (tmp_reg_3084_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            v_V_we0 <= ap_const_logic_1;
        else 
            v_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln54_fu_2376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_bank_1),64));
end behav;
